version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 32181:32181
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafkastreams-network

  kafka:
    image: confluentinc/cp-kafka:5.4.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_LISTENERS: PLAINTEXT_INSIDE://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INSIDE://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_INSIDE:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INSIDE
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafkastreams-network

  kafka-setup:
    image: confluentinc/cp-kafka:5.4.1
    container_name: kafka-setup
    depends_on:
      - kafka
      - zookeeper
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    tty: true
    # We defined a dependency on "broker", but `depends_on` will NOT wait for the
    # dependencies to be "ready" before starting the "kafka-setup"
    # container;  it waits only until the dependencies have started.  Hence we
    # must control startup order more explicitly.
    # See https://docs.docker.com/compose/startup-order/
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                         cub kafka-ready -b kafka:29092 1 20 && \
                         echo && echo Creating topics && sleep 15 && \
                         kafka-topics --create --topic temperature-values --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 && \
                         kafka-topics --create --topic weather-stations --if-not-exists --zookeeper zookeeper:32181 --partitions 1 --replication-factor 1 && \
                         kafka-topics --list --zookeeper zookeeper:32181
                         sleep infinity'"
    networks:
      - kafkastreams-network

  producer:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
      args:
        KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    image: kafka-streams-producer:1.0
    container_name: producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafkastreams-network

networks:
  kafkastreams-network:
    name: ks
